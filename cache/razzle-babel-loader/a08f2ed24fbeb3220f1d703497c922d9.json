{"ast":null,"code":"import Web3 from \"web3\";\nconst rpcURL = `https://kovan.infura.io/v3/${process.env.RAZZLE_INFURA_PROJECT_ID}`;\nconst web3 = new Web3(rpcURL);\nexport const removeDuplicateObjectFromArray = (arr, key) => {\n  const check = {};\n  const filteredArr = [];\n  arr.forEach(obj => {\n    if (!check[obj[key]]) {\n      check[obj[key]] = true;\n      filteredArr.push(obj);\n    }\n  });\n  return filteredArr;\n};\nexport const getErc20Balance = async (tokenAddress, walletAddress) => {\n  const balance = await contract.methods.balanceOf(walletAddress).call();\n  return balance;\n};","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/lib/utils.ts"],"names":["Web3","rpcURL","process","env","RAZZLE_INFURA_PROJECT_ID","web3","removeDuplicateObjectFromArray","arr","key","check","filteredArr","forEach","obj","push","getErc20Balance","tokenAddress","walletAddress","balance","contract","methods","balanceOf","call"],"mappings":"AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,MAAMC,MAAM,GAAI,8BAA6BC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,EAAlF;AACA,MAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASC,MAAT,CAAb;AAEA,OAAO,MAAMK,8BAA8B,GAAG,CAC5CC,GAD4C,EAE5CC,GAF4C,KAGpC;AACR,QAAMC,KAAK,GAAG,EAAd;AAEA,QAAMC,WAAW,GAAG,EAApB;AAEAH,EAAAA,GAAG,CAACI,OAAJ,CAAaC,GAAD,IAAS;AACnB,QAAI,CAACH,KAAK,CAACG,GAAG,CAACJ,GAAD,CAAJ,CAAV,EAAsB;AACpBC,MAAAA,KAAK,CAACG,GAAG,CAACJ,GAAD,CAAJ,CAAL,GAAkB,IAAlB;AAEAE,MAAAA,WAAW,CAACG,IAAZ,CAAiBD,GAAjB;AACD;AACF,GAND;AAQA,SAAOF,WAAP;AACD,CAjBM;AAmBP,OAAO,MAAMI,eAAe,GAAG,OAC7BC,YAD6B,EAE7BC,aAF6B,KAG1B;AACH,QAAMC,OAAO,GAAG,MAAMC,QAAQ,CAACC,OAAT,CAAiBC,SAAjB,CAA2BJ,aAA3B,EAA0CK,IAA1C,EAAtB;AAEA,SAAOJ,OAAP;AACD,CAPM","sourcesContent":["import { abi } from \"../lib/abi/ierc20\";\nimport Web3 from \"web3\";\nconst rpcURL = `https://kovan.infura.io/v3/${process.env.RAZZLE_INFURA_PROJECT_ID}`;\nconst web3 = new Web3(rpcURL);\n\nexport const removeDuplicateObjectFromArray = <T>(\n  arr: object[],\n  key: string\n): T[] => {\n  const check = {};\n\n  const filteredArr = [];\n\n  arr.forEach((obj) => {\n    if (!check[obj[key]]) {\n      check[obj[key]] = true;\n\n      filteredArr.push(obj);\n    }\n  });\n\n  return filteredArr;\n};\n\nexport const getErc20Balance = async (\n  tokenAddress: string,\n  walletAddress: string\n) => {\n  const balance = await contract.methods.balanceOf(walletAddress).call();\n\n  return balance;\n};\n"]},"metadata":{},"sourceType":"module"}