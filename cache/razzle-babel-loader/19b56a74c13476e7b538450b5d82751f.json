{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/cards/Swap.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport SwapFields from \"../fields/SwapFields\";\nimport { useAppSelector as useSelector } from \"../../lib/redux/hooks\";\n\nconst Swap = () => {\n  const fromValue = useSelector(state => state.inputValues.fromVal);\n  const toValue = useSelector(state => state.inputValues.toVal);\n  const fromToken = useSelector(state => state.swapTokens.fromToken);\n  const toToken = useSelector(state => state.swapTokens.toToken);\n  return __jsx(\"div\", {\n    className: \"card\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: \"15px 15px 13px 15px\",\n      width: \"465px\",\n      marginTop: \"calc(108px - 1.5rem)\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    style: {\n      marginRight: \"auto\",\n      fontSize: \"20px\",\n      fontWeight: 500,\n      userSelect: \"none\",\n      paddingBottom: \"23px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Swap\"), __jsx(SwapFields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: \"39px\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, false ? __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      fontWeight: 500,\n      lineHeight: \"24px\",\n      paddingRight: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"1 USDC = 0.034 ETH\") : null)), __jsx(\"button\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      // TODO: check the state of the inputs to see if an amount has been entered,\n      //       and change the background accordingly\n      background: true ? \"#69c0ff\" : \"#1890FF\",\n      boxShadow: \"0px 2px 0px rgba(0, 0, 0, 0.016)\",\n      borderRadius: \"10px\",\n      border: \"none\",\n      fontFamily: \"IBM Plex Mono, monospace\",\n      lineHeight: \"24px\",\n      fontSize: \"16px\",\n      color: \"white\",\n      // marginTop: \"16px\",\n      padding: \"13.5px 0px\",\n      // TODO: check the state of the inputs to see if an amount has been entered,\n      //       and change the cursor state accordingly\n      cursor: true ? \"default\" : \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    style: {\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, !fromValue && !toToken ? \"ENTER AN AMOUNT\" : fromValue && !toToken ? \"SELECT A TOKEN\" : \"Swap\")));\n};\n\nexport default Swap;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/cards/Swap.tsx"],"names":["React","SwapFields","useAppSelector","useSelector","Swap","fromValue","state","inputValues","fromVal","toValue","toVal","fromToken","swapTokens","toToken","display","flexDirection","padding","width","marginTop","marginLeft","marginRight","fontSize","fontWeight","userSelect","paddingBottom","height","justifyContent","alignItems","lineHeight","paddingRight","background","boxShadow","borderRadius","border","fontFamily","color","cursor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SwapFields from \"../fields/SwapFields\";\nimport { useAppSelector as useSelector } from \"../../lib/redux/hooks\";\n\nconst Swap = () => {\n  const fromValue = useSelector((state) => state.inputValues.fromVal);\n  const toValue = useSelector((state) => state.inputValues.toVal);\n  const fromToken = useSelector((state) => state.swapTokens.fromToken);\n  const toToken = useSelector((state) => state.swapTokens.toToken);\n\n  return (\n    <div\n      className=\"card\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"15px 15px 13px 15px\",\n        width: \"465px\",\n        marginTop: \"calc(108px - 1.5rem)\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n      }}\n    >\n      <p\n        style={{\n          marginRight: \"auto\",\n          fontSize: \"20px\",\n          fontWeight: 500,\n          userSelect: \"none\",\n          paddingBottom: \"23px\",\n        }}\n      >\n        Swap\n      </p>\n      <SwapFields />\n      <div>\n        <div\n          style={{\n            height: \"39px\",\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}\n        >\n          {false ? (\n            <p\n              style={{\n                fontSize: \"14px\",\n                fontWeight: 500,\n                lineHeight: \"24px\",\n                paddingRight: \"30px\",\n              }}\n            >\n              1 USDC = 0.034 ETH\n            </p>\n          ) : null}\n        </div>\n      </div>\n      <button\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n          // TODO: check the state of the inputs to see if an amount has been entered,\n          //       and change the background accordingly\n          background: true ? \"#69c0ff\" : \"#1890FF\",\n          boxShadow: \"0px 2px 0px rgba(0, 0, 0, 0.016)\",\n          borderRadius: \"10px\",\n          border: \"none\",\n          fontFamily: \"IBM Plex Mono, monospace\",\n          lineHeight: \"24px\",\n          fontSize: \"16px\",\n          color: \"white\",\n          // marginTop: \"16px\",\n          padding: \"13.5px 0px\",\n          // TODO: check the state of the inputs to see if an amount has been entered,\n          //       and change the cursor state accordingly\n          cursor: true ? \"default\" : \"pointer\",\n        }}\n      >\n        {/* TODO: change what is said here depending on whether inputs are filled out and tokens are selected */}\n        <span style={{ userSelect: \"none\" }}>\n          {!fromValue && !toToken\n            ? \"ENTER AN AMOUNT\"\n            : fromValue && !toToken\n            ? \"SELECT A TOKEN\"\n            : \"Swap\"}\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default Swap;\n"]},"metadata":{},"sourceType":"module"}