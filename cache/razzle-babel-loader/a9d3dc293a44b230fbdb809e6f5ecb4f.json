{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/fields/SwapFields.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { removeDuplicateObjectFromArray, getErc20Balance } from \"../../lib/utils\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport DownArrowIcon from \"../buttons/TokenSwitch\";\nimport { useAppSelector as useSelector, useAppDispatch as useDispatch } from \"../../lib/redux/hooks\";\nimport { modifyFromValue, modifyToValue } from \"../../lib/redux/slices/inputValues\";\nimport { modifyFromToken, modifyToToken } from \"../../lib/redux/slices/swapTokens\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { formatEther } from \"@ethersproject/units\";\nimport \"../../styles/fields/SwapFields.css\";\n\nconst Field = ({\n  heading,\n  balance,\n  token,\n  changeToken,\n  inputValue,\n  changeInputValue\n}) => {\n  const dispatch = useDispatch();\n  const {\n    account,\n    active\n  } = useWeb3React(); // Get the token balance\n\n  useEffect(() => {\n    if (token && token.address && !token.balance && account) {\n      (async () => {\n        const tokenBalance = await getErc20Balance(token.address, account);\n        dispatch(changeToken(_objectSpread(_objectSpread({}, token), {}, {\n          balance: formatEther(tokenBalance)\n        })));\n      })();\n    }\n  }, [token, account]); // Make all token balances 'null' when the user is no longer logged into Metamask\n\n  useEffect(() => {\n    if (!active && token && token.balance) {\n      dispatch(changeToken(_objectSpread(_objectSpread({}, token), {}, {\n        balance: null\n      })));\n    }\n  }, [active]);\n  return __jsx(\"div\", {\n    className: \"field-container\",\n    style: {\n      marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\"\n    },\n    className: \"text bold no-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, heading), __jsx(\"div\", {\n    className: \"token-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    style: {\n      padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\"\n    },\n    className: \"token-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, token ? __jsx(\"img\", {\n    style: {\n      width: \"19px\",\n      height: \"19px\",\n      userSelect: \"none\"\n    },\n    src: token.logoURI,\n    alt: `${token.symbol} logo`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }) : null, __jsx(\"p\", {\n    style: {\n      fontSize: \"16px\",\n      fontWeight: 500,\n      lineHeight: \"23px\",\n      textAlign: \"center\",\n      margin: \"0px 8px\",\n      fontFamily: \"IBM Plex Mono, monospace\",\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, token ? token.symbol : \"Select Token\"), __jsx(HiChevronDown, {\n    style: {\n      fontSize: \"15px\",\n      color: \"rgba(0, 0, 0, 0.85)\",\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), __jsx(\"input\", {\n    style: {\n      color: \"rgb(0, 0, 0)\",\n      width: \"0px\",\n      position: \"relative\",\n      fontWeight: 500,\n      outline: \"none\",\n      border: \"none\",\n      flex: \"1 1 auto\",\n      backgroundColor: \"transparent\",\n      fontSize: \"24px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      padding: \"0px\",\n      appearance: \"textfield\",\n      textAlign: \"right\",\n      marginLeft: \"12px\",\n      fontFamily: \"IBM Plex Mono, monospace\"\n    },\n    type: \"number\",\n    inputMode: \"decimal\",\n    placeholder: \"0.0\",\n    spellCheck: false,\n    minLength: 1,\n    maxLength: 79,\n    value: inputValue ? inputValue : \"\",\n    onChange: e => {\n      const {\n        target\n      } = e;\n      const {\n        value\n      } = target;\n      dispatch(changeInputValue(value));\n    },\n    disabled: heading.toLowerCase() === \"to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"rgb(0, 0, 0)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, balance ? __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      lineHeight: \"24px\",\n      textAlign: \"left\",\n      color: \"rgba(0, 0, 0, 0.85)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    style: {\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Balance:\"), balance.quantity === \"0.0\" || balance.quantity == \"0\" ? \"0\" : parseFloat(balance.quantity).toFixed(3), \" \", balance.symbol) : __jsx(\"div\", {\n    style: {\n      height: \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst SwapFields = () => {\n  const {\n    0: tokenList,\n    1: setTokenList\n  } = useState([]); // Async load the (mock) token list\n\n  useEffect(() => {\n    const desiredTokens = [{\n      symbol: \"WETH\",\n      address: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\"\n    }, {\n      symbol: \"AAVE\",\n      address: \"0xB597cd8D3217ea6477232F9217fa70837ff667Af\"\n    }, {\n      symbol: \"UNI\",\n      address: \"0x075A36BA8846C6B6F53644fDd3bf17E5151789DC\"\n    }, {\n      symbol: \"COMP\",\n      address: \"0x61460874a7196d6a22D1eE4922473664b3E95270\"\n    }, {\n      symbol: \"DAI\",\n      address: \"0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD\"\n    }, {\n      symbol: \"USDC\",\n      address: \"0xe22da380ee6B445bb8273C81944ADEB6E8450422\"\n    }];\n\n    (async () => {\n      const res = await fetch(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\n      const json = await res.json();\n      const {\n        tokens\n      } = json;\n      const filteredTokenList = removeDuplicateObjectFromArray(tokens.filter(token => desiredTokens.some(desiredToken => desiredToken.symbol === token.symbol)), \"symbol\").map(token => {\n        return _objectSpread(_objectSpread({}, token), {}, {\n          address: desiredTokens.find(desiredToken => desiredToken.symbol === token.symbol).address\n        });\n      });\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n  const fromToken = useSelector(state => state.swapTokens.fromToken);\n  const toToken = useSelector(state => state.swapTokens.toToken);\n  const fromValue = useSelector(state => state.inputValues.fromVal);\n  const toValue = useSelector(state => state.inputValues.toVal);\n  const dispatch = useDispatch(); // Set the initial token values on page load\n\n  useEffect(() => {\n    // lines 259 - 261 would be the desired function if the user was able to choose a token from a modal menu\n    // if (fromToken == null && tokenList.length > 0) {\n    //   dispatch(modifyFromToken(tokenList[0]));\n    // }\n    if (tokenList.length > 0) {\n      if (fromToken == null) {\n        dispatch(modifyFromToken(tokenList[0]));\n      }\n\n      if (toToken == null) {\n        dispatch(modifyToToken(tokenList[1]));\n      }\n    }\n  }, [tokenList]);\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }, __jsx(Field, {\n    heading: \"FROM\",\n    token: fromToken,\n    changeToken: modifyFromToken,\n    inputValue: fromValue,\n    changeInputValue: modifyFromValue,\n    balance: fromToken && (fromToken === null || fromToken === void 0 ? void 0 : fromToken.balance) ? {\n      quantity: fromToken.balance,\n      symbol: fromToken.symbol\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }), __jsx(Field, {\n    heading: \"TO\",\n    token: toToken,\n    changeToken: modifyToToken,\n    inputValue: toValue,\n    changeInputValue: modifyToValue,\n    balance: toToken && (toToken === null || toToken === void 0 ? void 0 : toToken.balance) ? {\n      quantity: toToken.balance,\n      symbol: toToken.symbol\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }), __jsx(DownArrowIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SwapFields;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/fields/SwapFields.tsx"],"names":["React","useState","useEffect","removeDuplicateObjectFromArray","getErc20Balance","HiChevronDown","DownArrowIcon","useAppSelector","useSelector","useAppDispatch","useDispatch","modifyFromValue","modifyToValue","modifyFromToken","modifyToToken","useWeb3React","formatEther","Field","heading","balance","token","changeToken","inputValue","changeInputValue","dispatch","account","active","address","tokenBalance","marginBottom","toLowerCase","fontSize","padding","width","height","userSelect","logoURI","symbol","fontWeight","lineHeight","textAlign","margin","fontFamily","color","position","outline","border","flex","backgroundColor","whiteSpace","overflow","textOverflow","appearance","marginLeft","e","target","value","display","alignItems","justifyContent","quantity","parseFloat","toFixed","SwapFields","tokenList","setTokenList","desiredTokens","res","fetch","json","tokens","filteredTokenList","filter","some","desiredToken","map","find","fromToken","state","swapTokens","toToken","fromValue","inputValues","fromVal","toValue","toVal","length","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  removeDuplicateObjectFromArray,\n  getErc20Balance,\n} from \"../../lib/utils\";\nimport { Token } from \"../../lib/types\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport DownArrowIcon from \"../buttons/TokenSwitch\";\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from \"../../lib/redux/hooks\";\nimport {\n  modifyFromValue,\n  modifyToValue,\n} from \"../../lib/redux/slices/inputValues\";\nimport {\n  modifyFromToken,\n  modifyToToken,\n} from \"../../lib/redux/slices/swapTokens\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { formatEther } from \"@ethersproject/units\";\n\nimport \"../../styles/fields/SwapFields.css\";\n\ntype FieldProps = {\n  heading: string;\n  token: Token;\n  changeToken: ActionCreatorWithPayload<any, string>;\n  inputValue: string;\n  changeInputValue: ActionCreatorWithPayload<any, string>;\n  balance: { quantity: string; symbol: string };\n};\nconst Field = ({\n  heading,\n  balance,\n  token,\n  changeToken,\n  inputValue,\n  changeInputValue,\n}: FieldProps) => {\n  const dispatch = useDispatch();\n\n  const { account, active } = useWeb3React<Web3Provider>();\n\n  // Get the token balance\n  useEffect(() => {\n    if (token && token.address && !token.balance && account) {\n      (async () => {\n        const tokenBalance = await getErc20Balance(token.address, account);\n\n        dispatch(changeToken({ ...token, balance: formatEther(tokenBalance) }));\n      })();\n    }\n  }, [token, account]);\n\n  // Make all token balances 'null' when the user is no longer logged into Metamask\n  useEffect(() => {\n    if (!active && token && token.balance) {\n      dispatch(changeToken({ ...token, balance: null }));\n    }\n  }, [active]);\n\n  return (\n    <div\n      className=\"field-container\"\n      style={{\n        marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0,\n      }}\n    >\n      <p\n        style={{\n          fontSize: \"14px\",\n        }}\n        className=\"text bold no-select\"\n      >\n        {heading}\n      </p>\n      <div className=\"token-button-container\">\n        <button\n          style={{\n            padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\",\n          }}\n          className=\"token-button\"\n        >\n          {token ? (\n            <img\n              style={{ width: \"19px\", height: \"19px\", userSelect: \"none\" }}\n              src={token.logoURI}\n              alt={`${token.symbol} logo`}\n            />\n          ) : null}\n          <p\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 500,\n              lineHeight: \"23px\",\n              textAlign: \"center\",\n              margin: \"0px 8px\",\n              fontFamily: \"IBM Plex Mono, monospace\",\n              userSelect: \"none\",\n            }}\n          >\n            {token ? token.symbol : \"Select Token\"}\n          </p>\n          <HiChevronDown\n            style={{\n              fontSize: \"15px\",\n              color: \"rgba(0, 0, 0, 0.85)\",\n              userSelect: \"none\",\n            }}\n          />\n        </button>\n        <input\n          style={{\n            color: \"rgb(0, 0, 0)\",\n            width: \"0px\",\n            position: \"relative\",\n            fontWeight: 500,\n            outline: \"none\",\n            border: \"none\",\n            flex: \"1 1 auto\",\n            backgroundColor: \"transparent\",\n            fontSize: \"24px\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            padding: \"0px\",\n            appearance: \"textfield\",\n            textAlign: \"right\",\n            marginLeft: \"12px\",\n            fontFamily: \"IBM Plex Mono, monospace\",\n          }}\n          type=\"number\"\n          inputMode=\"decimal\"\n          placeholder=\"0.0\"\n          spellCheck={false}\n          minLength={1}\n          maxLength={79}\n          value={inputValue ? inputValue : \"\"}\n          onChange={(e) => {\n            const { target } = e;\n            const { value } = target;\n\n            dispatch(changeInputValue(value));\n          }}\n          disabled={heading.toLowerCase() === \"to\"}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          color: \"rgb(0, 0, 0)\",\n        }}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}\n        >\n          {balance ? (\n            <p\n              style={{\n                fontSize: \"14px\",\n                lineHeight: \"24px\",\n                textAlign: \"left\",\n                color: \"rgba(0, 0, 0, 0.85)\",\n              }}\n            >\n              <span style={{ userSelect: \"none\" }}>Balance:</span>\n              {balance.quantity === \"0.0\" || balance.quantity == \"0\"\n                ? \"0\"\n                : parseFloat(balance.quantity).toFixed(3)}{\" \"}\n              {balance.symbol}\n            </p>\n          ) : (\n            <div style={{ height: \"24px\" }} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SwapFields = () => {\n  const [tokenList, setTokenList] = useState<Token[]>([]);\n\n  // Async load the (mock) token list\n  useEffect(() => {\n    const desiredTokens = [\n      { symbol: \"WETH\", address: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\" },\n      { symbol: \"AAVE\", address: \"0xB597cd8D3217ea6477232F9217fa70837ff667Af\" },\n      { symbol: \"UNI\", address: \"0x075A36BA8846C6B6F53644fDd3bf17E5151789DC\" },\n      { symbol: \"COMP\", address: \"0x61460874a7196d6a22D1eE4922473664b3E95270\" },\n      { symbol: \"DAI\", address: \"0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD\" },\n      { symbol: \"USDC\", address: \"0xe22da380ee6B445bb8273C81944ADEB6E8450422\" },\n    ];\n\n    (async () => {\n      const res = await fetch(\n        \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\"\n      );\n      const json: { tokens: Token[] } = await res.json();\n      const { tokens } = json;\n\n      const filteredTokenList = removeDuplicateObjectFromArray<Token>(\n        tokens.filter((token) =>\n          desiredTokens.some(\n            (desiredToken) => desiredToken.symbol === token.symbol\n          )\n        ),\n        \"symbol\"\n      ).map((token) => {\n        return {\n          ...token,\n          address: desiredTokens.find(\n            (desiredToken) => desiredToken.symbol === token.symbol\n          ).address,\n        };\n      });\n\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n\n  const fromToken = useSelector((state) => state.swapTokens.fromToken);\n  const toToken = useSelector((state) => state.swapTokens.toToken);\n  const fromValue = useSelector((state) => state.inputValues.fromVal);\n  const toValue = useSelector((state) => state.inputValues.toVal);\n\n  const dispatch = useDispatch();\n\n  // Set the initial token values on page load\n  useEffect(() => {\n    // lines 259 - 261 would be the desired function if the user was able to choose a token from a modal menu\n\n    // if (fromToken == null && tokenList.length > 0) {\n    //   dispatch(modifyFromToken(tokenList[0]));\n    // }\n\n    if (tokenList.length > 0) {\n      if (fromToken == null) {\n        dispatch(modifyFromToken(tokenList[0]));\n      }\n\n      if (toToken == null) {\n        dispatch(modifyToToken(tokenList[1]));\n      }\n    }\n  }, [tokenList]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      }}\n    >\n      <Field\n        heading=\"FROM\"\n        token={fromToken}\n        changeToken={modifyFromToken}\n        inputValue={fromValue}\n        changeInputValue={modifyFromValue}\n        balance={\n          fromToken && fromToken?.balance\n            ? { quantity: fromToken.balance, symbol: fromToken.symbol }\n            : null\n        }\n      />\n      <Field\n        heading=\"TO\"\n        token={toToken}\n        changeToken={modifyToToken}\n        inputValue={toValue}\n        changeInputValue={modifyToValue}\n        balance={\n          toToken && toToken?.balance\n            ? { quantity: toToken.balance, symbol: toToken.symbol }\n            : null\n        }\n      />\n      <DownArrowIcon />\n    </div>\n  );\n};\n\nexport default SwapFields;\n"]},"metadata":{},"sourceType":"module"}