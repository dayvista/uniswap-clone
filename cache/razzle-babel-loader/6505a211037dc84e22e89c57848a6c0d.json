{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { removeDuplicateObjectFromArray } from \"../../lib/utils\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport DownArrowIcon from \"../icons/DownArrow\";\n\nconst Field = ({\n  heading,\n  tokenList,\n  balance\n}) => {\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  useEffect(() => {\n    if (token == null && tokenList.length > 0 && heading.toLowerCase() === \"from\") {\n      setToken(tokenList[0]);\n    }\n  }, [tokenList]);\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0,\n      background: \"#e6f7ff\",\n      border: \"3px solid #91d5ff\",\n      borderRadius: \"10px\",\n      padding: \"5px 32px 6px 19px\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      lineHeight: \"24px\",\n      fontWeight: 500,\n      userSelect: \"none\"\n    }\n  }, heading), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      padding: \"6px 0px 9px 0px\"\n    }\n  }, __jsx(\"button\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\",\n      background: \"#E6F7FF\",\n      boxShadow: \"0px 6px 8px rgba(0, 0, 0, 0.15)\",\n      borderRadius: \"10px\",\n      border: \"none\",\n      cursor: \"pointer\",\n      minHeight: \"40px\",\n      minWidth: \"114px\"\n    }\n  }, token ? __jsx(\"img\", {\n    style: {\n      width: \"19px\",\n      height: \"19px\",\n      userSelect: \"none\"\n    },\n    src: token.logoURI,\n    alt: `${token.symbol} logo`\n  }) : null, __jsx(\"p\", {\n    style: {\n      fontSize: \"16px\",\n      fontWeight: 500,\n      lineHeight: \"23px\",\n      textAlign: \"center\",\n      margin: \"0px 8px\",\n      fontFamily: \"IBM Plex Mono, monospace\",\n      userSelect: \"none\"\n    }\n  }, token ? token.symbol : \"Select Token\"), __jsx(HiChevronDown, {\n    style: {\n      fontSize: \"15px\",\n      color: \"rgba(0, 0, 0, 0.85)\",\n      userSelect: \"none\"\n    }\n  })), __jsx(\"input\", {\n    style: {\n      color: \"rgb(0, 0, 0)\",\n      width: \"0px\",\n      position: \"relative\",\n      fontWeight: 500,\n      outline: \"none\",\n      border: \"none\",\n      flex: \"1 1 auto\",\n      backgroundColor: \"transparent\",\n      fontSize: \"24px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      padding: \"0px\",\n      appearance: \"textfield\",\n      textAlign: \"right\",\n      marginLeft: \"12px\",\n      fontFamily: \"IBM Plex Mono, monospace\"\n    },\n    type: \"number\",\n    inputMode: \"decimal\",\n    placeholder: \"0.0\",\n    spellCheck: false,\n    minLength: 1,\n    maxLength: 79\n  })), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"rgb(0, 0, 0)\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\"\n    }\n  }, balance ? __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      lineHeight: \"24px\",\n      textAlign: \"left\",\n      color: \"rgba(0, 0, 0, 0.85)\"\n    }\n  }, __jsx(\"span\", {\n    style: {\n      userSelect: \"none\"\n    }\n  }, \"Balance:\"), balance.quantity, \" \", balance.symbol) : __jsx(\"div\", {\n    style: {\n      height: \"24px\"\n    }\n  }))));\n};\n\nconst SwapFields = () => {\n  const {\n    0: tokenList,\n    1: setTokenList\n  } = useState([]);\n  useEffect(() => {\n    const tokenSymbols = [\"WETH\", \"AAVE\", \"UNI\", \"COMP\", \"DAI\", \"USDC\"];\n\n    (async () => {\n      const res = await fetch(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\n      const json = await res.json();\n      const {\n        tokens\n      } = json;\n      const filteredTokenList = removeDuplicateObjectFromArray(tokens.filter(token => tokenSymbols.includes(token.symbol)), \"symbol\");\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      padding: \"23px 0px\"\n    }\n  }, __jsx(Field, {\n    heading: \"FROM\",\n    tokenList: tokenList,\n    balance: {\n      quantity: 32,\n      symbol: \"ETH\"\n    }\n  }), __jsx(Field, {\n    heading: \"TO\",\n    tokenList: tokenList\n  }), __jsx(DownArrowIcon, null));\n};\n\nexport default SwapFields;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/fields/SwapFields.tsx"],"names":["React","useState","useEffect","removeDuplicateObjectFromArray","HiChevronDown","DownArrowIcon","Field","heading","tokenList","balance","token","setToken","length","toLowerCase","display","flexDirection","marginBottom","background","border","borderRadius","padding","fontSize","lineHeight","fontWeight","userSelect","justifyContent","alignItems","boxShadow","cursor","minHeight","minWidth","width","height","logoURI","symbol","textAlign","margin","fontFamily","color","position","outline","flex","backgroundColor","whiteSpace","overflow","textOverflow","appearance","marginLeft","quantity","SwapFields","setTokenList","tokenSymbols","res","fetch","json","tokens","filteredTokenList","filter","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, KeyboardEvent } from \"react\";\nimport { removeDuplicateObjectFromArray } from \"../../lib/utils\";\nimport { Token } from \"../../lib/types\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport DownArrowIcon from \"../icons/DownArrow\";\n\ntype FieldProps = {\n  heading: string;\n  tokenList: Token[];\n  balance?: { quantity: number; symbol: string };\n};\nconst Field = ({ heading, tokenList, balance }: FieldProps) => {\n  const [token, setToken] = useState<Token>(null);\n\n  useEffect(() => {\n    if (\n      token == null &&\n      tokenList.length > 0 &&\n      heading.toLowerCase() === \"from\"\n    ) {\n      setToken(tokenList[0]);\n    }\n  }, [tokenList]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0,\n        background: \"#e6f7ff\",\n        border: \"3px solid #91d5ff\",\n        borderRadius: \"10px\",\n        padding: \"5px 32px 6px 19px\",\n      }}\n    >\n      <p\n        style={{\n          fontSize: \"14px\",\n          lineHeight: \"24px\",\n          fontWeight: 500,\n          userSelect: \"none\",\n        }}\n      >\n        {heading}\n      </p>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: \"6px 0px 9px 0px\",\n        }}\n      >\n        <button\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\",\n            background: \"#E6F7FF\",\n            boxShadow: \"0px 6px 8px rgba(0, 0, 0, 0.15)\",\n            borderRadius: \"10px\",\n            border: \"none\",\n            cursor: \"pointer\",\n            minHeight: \"40px\",\n            minWidth: \"114px\",\n          }}\n        >\n          {token ? (\n            <img\n              style={{ width: \"19px\", height: \"19px\", userSelect: \"none\" }}\n              src={token.logoURI}\n              alt={`${token.symbol} logo`}\n            />\n          ) : null}\n          <p\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 500,\n              lineHeight: \"23px\",\n              textAlign: \"center\",\n              margin: \"0px 8px\",\n              fontFamily: \"IBM Plex Mono, monospace\",\n              userSelect: \"none\",\n            }}\n          >\n            {token ? token.symbol : \"Select Token\"}\n          </p>\n          <HiChevronDown\n            style={{\n              fontSize: \"15px\",\n              color: \"rgba(0, 0, 0, 0.85)\",\n              userSelect: \"none\",\n            }}\n          />\n        </button>\n        <input\n          style={{\n            color: \"rgb(0, 0, 0)\",\n            width: \"0px\",\n            position: \"relative\",\n            fontWeight: 500,\n            outline: \"none\",\n            border: \"none\",\n            flex: \"1 1 auto\",\n            backgroundColor: \"transparent\",\n            fontSize: \"24px\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            padding: \"0px\",\n            appearance: \"textfield\",\n            textAlign: \"right\",\n            marginLeft: \"12px\",\n            fontFamily: \"IBM Plex Mono, monospace\",\n          }}\n          type=\"number\"\n          inputMode=\"decimal\"\n          placeholder=\"0.0\"\n          spellCheck={false}\n          minLength={1}\n          maxLength={79}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          color: \"rgb(0, 0, 0)\",\n        }}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}\n        >\n          {balance ? (\n            <p\n              style={{\n                fontSize: \"14px\",\n                lineHeight: \"24px\",\n                textAlign: \"left\",\n                color: \"rgba(0, 0, 0, 0.85)\",\n              }}\n            >\n              <span style={{ userSelect: \"none\" }}>Balance:</span>\n              {balance.quantity} {balance.symbol}\n            </p>\n          ) : (\n            <div style={{ height: \"24px\" }} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SwapFields = () => {\n  const [tokenList, setTokenList] = useState<Token[]>([]);\n\n  useEffect(() => {\n    const tokenSymbols = [\"WETH\", \"AAVE\", \"UNI\", \"COMP\", \"DAI\", \"USDC\"];\n\n    (async () => {\n      const res = await fetch(\n        \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\"\n      );\n      const json: { tokens: Token[] } = await res.json();\n      const { tokens } = json;\n\n      const filteredTokenList = removeDuplicateObjectFromArray(\n        tokens.filter((token) => tokenSymbols.includes(token.symbol)),\n        \"symbol\"\n      );\n\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"relative\",\n        padding: \"23px 0px\",\n      }}\n    >\n      <Field\n        heading=\"FROM\"\n        tokenList={tokenList}\n        balance={{ quantity: 32, symbol: \"ETH\" }}\n      />\n      <Field heading=\"TO\" tokenList={tokenList} />\n      <DownArrowIcon />\n    </div>\n  );\n};\n\nexport default SwapFields;\n"]},"metadata":{},"sourceType":"module"}