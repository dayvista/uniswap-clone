{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useAppSelector as useSelector, useAppDispatch as useDispatch } from \"../../lib/redux/hooks\";\nimport { setBalance } from \"../../lib/redux/slices/walletData\";\nimport avatar from \"../../assets/images/avatar.svg\"; // uses Kovan testnet (chainId 42)\n\nconst injectedConnector = new InjectedConnector({\n  supportedChainIds: [42]\n});\n\nconst Wallet = () => {\n  const {\n    chainId,\n    account,\n    activate,\n    active,\n    library\n  } = useWeb3React();\n  const balance = useSelector(state => state.walletData.balance);\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  useEffect(() => {\n    if (library) {\n      (async () => {\n        const newBalance = formatEther(await library.getBalance(account, \"latest\"));\n\n        if (newBalance !== balance) {\n          dispatch(setBalance(newBalance));\n        }\n      })();\n    } else {\n      dispatch(setBalance(null));\n    }\n  }, [library]);\n  useEffect(() => {\n    console.log(balance);\n  }, [balance]);\n  return __jsx(React.Fragment, null, !active ? __jsx(\"button\", {\n    style: {\n      fontWeight: 500,\n      background: \"#e6f7ff\",\n      padding: \"10px 36px\",\n      cursor: \"pointer\",\n      border: \"none\",\n      borderRadius: \"10px\",\n      fontFamily: \"IBM Plex Mono, monospace\",\n      fontSize: \"16px\",\n      justifySelf: \"flex-end\",\n      width: \"207px\",\n      height: \"fit-content\"\n    },\n    onClick: onClick\n  }, \"Connect Wallet\") : __jsx(\"div\", {\n    style: {\n      width: \"314px\",\n      height: \"40px\",\n      justifySelf: \"flex-end\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: \"auto\",\n      zIndex: 1,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      width: \"fit-content\",\n      height: \"100%\",\n      padding: \"0px 6.5px 0px 34.5px\",\n      background: \"#E6F7FF\",\n      boxShadow: \"0px 2px 0px rgba(0, 0, 0, 0.016)\",\n      borderRadius: \"10px\",\n      position: \"relative\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"16px\",\n      lineHeight: \"24px\",\n      fontWeight: \"bold\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    }\n  }, account.substr(0, 4) + \"...\" + account.substr(account.length - 6)), __jsx(\"img\", {\n    src: avatar,\n    alt: \"user avatar\",\n    style: {\n      borderRadius: \"100%\",\n      marginLeft: \"6.5px\",\n      marginBottom: \"2px\",\n      width: \"19px\",\n      height: \"19px\"\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"calc(100% - 18px)\",\n      zIndex: -1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"4px 37px 4px 20px\",\n      border: \"4px solid #E6F7FF\",\n      borderRadius: \"10px\",\n      width: \"60px\",\n      height: !balance ? \"24px\" : \"auto\"\n    }\n  }, balance ? __jsx(\"p\", {\n    style: {\n      fontSize: \"16px\",\n      lineHeight: \"24px\",\n      color: \"rgba(0, 0, 0, 0.85)\"\n    }\n  }, parseInt(balance), \" ETH\") : null))));\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/buttons/Wallet.tsx"],"names":["React","useEffect","useWeb3React","InjectedConnector","formatEther","useAppSelector","useSelector","useAppDispatch","useDispatch","setBalance","avatar","injectedConnector","supportedChainIds","Wallet","chainId","account","activate","active","library","balance","state","walletData","dispatch","onClick","newBalance","getBalance","console","log","fontWeight","background","padding","cursor","border","borderRadius","fontFamily","fontSize","justifySelf","width","height","marginLeft","zIndex","display","justifyContent","alignItems","boxShadow","position","lineHeight","overflow","textOverflow","whiteSpace","substr","length","marginBottom","right","color","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { formatEther } from \"@ethersproject/units\";\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from \"../../lib/redux/hooks\";\nimport { setBalance } from \"../../lib/redux/slices/walletData\";\n\nimport avatar from \"../../assets/images/avatar.svg\";\n\n// uses Kovan testnet (chainId 42)\nconst injectedConnector = new InjectedConnector({ supportedChainIds: [42] });\n\nconst Wallet = () => {\n  const { chainId, account, activate, active, library } =\n    useWeb3React<Web3Provider>();\n\n  const balance = useSelector((state) => state.walletData.balance);\n\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  useEffect(() => {\n    if (library) {\n      (async () => {\n        const newBalance = formatEther(\n          await library.getBalance(account, \"latest\")\n        );\n\n        if (newBalance !== balance) {\n          dispatch(setBalance(newBalance));\n        }\n      })();\n    } else {\n      dispatch(setBalance(null));\n    }\n  }, [library]);\n\n  useEffect(() => {\n    console.log(balance);\n  }, [balance]);\n\n  return (\n    <>\n      {!active ? (\n        <button\n          style={{\n            fontWeight: 500,\n            background: \"#e6f7ff\",\n            padding: \"10px 36px\",\n            cursor: \"pointer\",\n            border: \"none\",\n            borderRadius: \"10px\",\n            fontFamily: \"IBM Plex Mono, monospace\",\n            fontSize: \"16px\",\n            justifySelf: \"flex-end\",\n            width: \"207px\",\n            height: \"fit-content\",\n          }}\n          onClick={onClick}\n        >\n          Connect Wallet\n        </button>\n      ) : (\n        <div\n          style={{\n            width: \"314px\",\n            height: \"40px\",\n            justifySelf: \"flex-end\",\n          }}\n        >\n          <div\n            style={{\n              marginLeft: \"auto\",\n              zIndex: 1,\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              width: \"fit-content\",\n              height: \"100%\",\n              padding: \"0px 6.5px 0px 34.5px\",\n              background: \"#E6F7FF\",\n              boxShadow: \"0px 2px 0px rgba(0, 0, 0, 0.016)\",\n              borderRadius: \"10px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                fontWeight: \"bold\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {account.substr(0, 4) +\n                \"...\" +\n                account.substr(account.length - 6)}\n            </p>\n            <img\n              src={avatar}\n              alt=\"user avatar\"\n              style={{\n                borderRadius: \"100%\",\n                marginLeft: \"6.5px\",\n                marginBottom: \"2px\",\n                width: \"19px\",\n                height: \"19px\",\n              }}\n            />\n            <div\n              style={{\n                position: \"absolute\",\n                right: \"calc(100% - 18px)\",\n                zIndex: -1,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                padding: \"4px 37px 4px 20px\",\n                border: \"4px solid #E6F7FF\",\n                borderRadius: \"10px\",\n                width: \"60px\",\n                height: !balance ? \"24px\" : \"auto\",\n              }}\n            >\n              {balance ? (\n                <p\n                  style={{\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                    color: \"rgba(0, 0, 0, 0.85)\",\n                  }}\n                >\n                  {parseInt(balance)} ETH\n                </p>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}