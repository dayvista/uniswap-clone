{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/buttons/TokenSwitch.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useAppSelector as useSelector, useAppDispatch as useDispatch } from \"../../lib/redux/hooks\";\nimport { switchTokens } from \"../../lib/redux/slices/swapTokens\";\nimport circle from \"../../assets/images/circle.svg\";\nimport downArrow from \"../../assets/images/down-arrow.svg\";\nimport \"../../styles/buttons/TokenSwitch.css\";\n\nconst TokenSwitch = () => {\n  const fromToken = useSelector(state => state.swapTokens.fromToken);\n  const toToken = useSelector(state => state.swapTokens.toToken);\n  const dispatch = useDispatch();\n  return __jsx(\"button\", {\n    onClick: () => {\n      if (fromToken.symbol !== toToken.symbol) {\n        dispatch(switchTokens());\n      }\n    },\n    id: \"token-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"no-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: circle,\n    draggable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: downArrow,\n    draggable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default TokenSwitch;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/buttons/TokenSwitch.tsx"],"names":["React","useAppSelector","useSelector","useAppDispatch","useDispatch","switchTokens","circle","downArrow","TokenSwitch","fromToken","state","swapTokens","toToken","dispatch","symbol"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,cAAc,IAAIC,WADpB,EAEEC,cAAc,IAAIC,WAFpB,QAGO,uBAHP;AAIA,SAASC,YAAT,QAA6B,mCAA7B;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,OAAO,sCAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBF,SAA7B,CAA7B;AACA,QAAMG,OAAO,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,OAA7B,CAA3B;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,SACE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIK,SAAS,CAACK,MAAV,KAAqBF,OAAO,CAACE,MAAjC,EAAyC;AACvCD,QAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACD;AACF,KALH;AAME,IAAA,EAAE,EAAC,cANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,MAAV;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,SAAV;AAAqB,IAAA,SAAS,EAAE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CARF,CADF;AAiBD,CAvBD;;AAyBA,eAAeC,WAAf","sourcesContent":["import React from \"react\";\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from \"../../lib/redux/hooks\";\nimport { switchTokens } from \"../../lib/redux/slices/swapTokens\";\n\nimport circle from \"../../assets/images/circle.svg\";\nimport downArrow from \"../../assets/images/down-arrow.svg\";\n\nimport \"../../styles/buttons/TokenSwitch.css\";\n\nconst TokenSwitch = () => {\n  const fromToken = useSelector((state) => state.swapTokens.fromToken);\n  const toToken = useSelector((state) => state.swapTokens.toToken);\n\n  const dispatch = useDispatch();\n\n  return (\n    <button\n      onClick={() => {\n        if (fromToken.symbol !== toToken.symbol) {\n          dispatch(switchTokens());\n        }\n      }}\n      id=\"token-switch\"\n    >\n      <div className=\"no-select\">\n        <img src={circle} draggable={false} />\n        <div>\n          <img src={downArrow} draggable={false} />\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default TokenSwitch;\n"]},"metadata":{},"sourceType":"module"}