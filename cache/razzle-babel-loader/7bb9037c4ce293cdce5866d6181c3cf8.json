{"ast":null,"code":"import _asyncToGenerator from \"/home/liam/Documents/Code/paladin/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/buttons/Wallet.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport _regeneratorRuntime from \"/home/liam/Documents/Code/paladin/test/node_modules/@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useAppSelector as useSelector, useAppDispatch as useDispatch } from \"../../lib/redux/hooks\";\nimport { setBalance } from \"../../lib/redux/slices/walletData\";\nimport avatar from \"../../assets/images/avatar.svg\";\nimport \"../../styles/buttons/Wallet.css\"; // uses Kovan testnet (chainId 42)\n\nvar injectedConnector = new InjectedConnector({\n  supportedChainIds: [42]\n});\n\nvar Wallet = function Wallet() {\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      activate = _useWeb3React.activate,\n      active = _useWeb3React.active,\n      library = _useWeb3React.library;\n\n  var balance = useSelector(function (state) {\n    return state.walletData.balance;\n  });\n  var dispatch = useDispatch();\n\n  var onClick = function onClick() {\n    activate(injectedConnector);\n  };\n\n  useEffect(function () {\n    if (library) {\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var newBalance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = formatEther;\n                _context.next = 3;\n                return library.getBalance(account, \"latest\");\n\n              case 3:\n                _context.t1 = _context.sent;\n                newBalance = (0, _context.t0)(_context.t1);\n\n                if (newBalance !== balance) {\n                  dispatch(setBalance(newBalance));\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    } else {\n      dispatch(setBalance(null));\n    }\n  }, [library]);\n  return __jsx(React.Fragment, null, !active ? __jsx(\"button\", {\n    // style={{\n    //   fontWeight: 500,\n    //   background: \"#e6f7ff\",\n    //   padding: \"10px 36px\",\n    //   cursor: \"pointer\",\n    //   border: \"none\",\n    //   borderRadius: \"10px\",\n    //   fontFamily: \"IBM Plex Mono, monospace\",\n    //   fontSize: \"16px\",\n    //   justifySelf: \"flex-end\",\n    //   width: \"207px\",\n    //   height: \"fit-content\",\n    // }}\n    onClick: onClick,\n    id: \"connect-wallet-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Connect Wallet\") : __jsx(\"div\", {\n    id: \"wallet-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, account.substr(0, 4) + \"...\" + account.substr(account.length - 6)), __jsx(\"img\", {\n    src: avatar,\n    alt: \"user avatar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      height: !balance ? \"24px\" : \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, balance ? __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 26\n    }\n  }, parseFloat(balance).toFixed(1), \" ETH\") : null))));\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/buttons/Wallet.tsx"],"names":["React","useEffect","useWeb3React","InjectedConnector","formatEther","useAppSelector","useSelector","useAppDispatch","useDispatch","setBalance","avatar","injectedConnector","supportedChainIds","Wallet","account","activate","active","library","balance","state","walletData","dispatch","onClick","getBalance","newBalance","substr","length","height","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { formatEther } from \"@ethersproject/units\";\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from \"../../lib/redux/hooks\";\nimport { setBalance } from \"../../lib/redux/slices/walletData\";\n\nimport avatar from \"../../assets/images/avatar.svg\";\n\nimport \"../../styles/buttons/Wallet.css\";\n\n// uses Kovan testnet (chainId 42)\nconst injectedConnector = new InjectedConnector({ supportedChainIds: [42] });\n\nconst Wallet = () => {\n  const { account, activate, active, library } = useWeb3React<Web3Provider>();\n\n  const balance = useSelector((state) => state.walletData.balance);\n\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  useEffect(() => {\n    if (library) {\n      (async () => {\n        const newBalance = formatEther(\n          await library.getBalance(account, \"latest\")\n        );\n\n        if (newBalance !== balance) {\n          dispatch(setBalance(newBalance));\n        }\n      })();\n    } else {\n      dispatch(setBalance(null));\n    }\n  }, [library]);\n\n  return (\n    <>\n      {!active ? (\n        <button\n          // style={{\n          //   fontWeight: 500,\n          //   background: \"#e6f7ff\",\n          //   padding: \"10px 36px\",\n          //   cursor: \"pointer\",\n          //   border: \"none\",\n          //   borderRadius: \"10px\",\n          //   fontFamily: \"IBM Plex Mono, monospace\",\n          //   fontSize: \"16px\",\n          //   justifySelf: \"flex-end\",\n          //   width: \"207px\",\n          //   height: \"fit-content\",\n          // }}\n          onClick={onClick}\n          id=\"connect-wallet-button\"\n        >\n          Connect Wallet\n        </button>\n      ) : (\n        <div id=\"wallet-container\">\n          <div>\n            <p>\n              {account.substr(0, 4) +\n                \"...\" +\n                account.substr(account.length - 6)}\n            </p>\n            <img src={avatar} alt=\"user avatar\" />\n            <div\n              style={{\n                height: !balance ? \"24px\" : \"auto\",\n              }}\n            >\n              {balance ? <p>{parseFloat(balance).toFixed(1)} ETH</p> : null}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}