{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/buttons/Wallet.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useAppSelector as useSelector, useAppDispatch as useDispatch } from \"../../lib/redux/hooks\";\nimport { setBalance } from \"../../lib/redux/slices/walletData\";\nimport avatar from \"../../assets/images/avatar.svg\"; // uses Kovan testnet (chainId 42)\n\nconst injectedConnector = new InjectedConnector({\n  supportedChainIds: [42]\n});\n\nconst Wallet = () => {\n  const {\n    chainId,\n    account,\n    activate,\n    active,\n    library\n  } = useWeb3React();\n  const balance = useSelector(state => state.walletData.balance);\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  useEffect(() => {\n    if (library) {\n      (async () => {\n        const newBalance = formatEther(await library.getBalance(account, \"latest\"));\n\n        if (newBalance !== balance) {\n          dispatch(setBalance(newBalance));\n        }\n      })();\n    } else {\n      dispatch(setBalance(null));\n    }\n  }, [library]);\n  useEffect(() => {\n    console.log(balance);\n  }, [balance]);\n  return __jsx(React.Fragment, null, !active ? __jsx(\"button\", {\n    style: {\n      fontWeight: 500,\n      background: \"#e6f7ff\",\n      padding: \"10px 36px\",\n      cursor: \"pointer\",\n      border: \"none\",\n      borderRadius: \"10px\",\n      fontFamily: \"IBM Plex Mono, monospace\",\n      fontSize: \"16px\",\n      justifySelf: \"flex-end\",\n      width: \"207px\",\n      height: \"fit-content\"\n    },\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Connect Wallet\") : __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"314px\",\n      height: \"40px\",\n      justifySelf: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, balance ? __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      zIndex: 0,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"4px 37px 4px 20px\",\n      border: \"4px solid #E6F7FF\",\n      borderRadius: \"10px\",\n      height: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"16px\",\n      lineHeight: \"24px\",\n      color: \"rgba(0, 0, 0, 0.85)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, parseInt(balance), \" ETH\")) : null, __jsx(\"div\", {\n    style: {\n      marginLeft: \"auto\",\n      zIndex: 1,\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"center\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: avatar,\n    alt: \"user avatar\",\n    style: {\n      borderRadius: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/buttons/Wallet.tsx"],"names":["React","useEffect","useWeb3React","InjectedConnector","formatEther","useAppSelector","useSelector","useAppDispatch","useDispatch","setBalance","avatar","injectedConnector","supportedChainIds","Wallet","chainId","account","activate","active","library","balance","state","walletData","dispatch","onClick","newBalance","getBalance","console","log","fontWeight","background","padding","cursor","border","borderRadius","fontFamily","fontSize","justifySelf","width","height","position","zIndex","display","justifyContent","alignItems","lineHeight","color","parseInt","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { formatEther } from \"@ethersproject/units\";\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from \"../../lib/redux/hooks\";\nimport { setBalance } from \"../../lib/redux/slices/walletData\";\n\nimport avatar from \"../../assets/images/avatar.svg\";\n\n// uses Kovan testnet (chainId 42)\nconst injectedConnector = new InjectedConnector({ supportedChainIds: [42] });\n\nconst Wallet = () => {\n  const { chainId, account, activate, active, library } =\n    useWeb3React<Web3Provider>();\n\n  const balance = useSelector((state) => state.walletData.balance);\n\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  useEffect(() => {\n    if (library) {\n      (async () => {\n        const newBalance = formatEther(\n          await library.getBalance(account, \"latest\")\n        );\n\n        if (newBalance !== balance) {\n          dispatch(setBalance(newBalance));\n        }\n      })();\n    } else {\n      dispatch(setBalance(null));\n    }\n  }, [library]);\n\n  useEffect(() => {\n    console.log(balance);\n  }, [balance]);\n\n  return (\n    <>\n      {!active ? (\n        <button\n          style={{\n            fontWeight: 500,\n            background: \"#e6f7ff\",\n            padding: \"10px 36px\",\n            cursor: \"pointer\",\n            border: \"none\",\n            borderRadius: \"10px\",\n            fontFamily: \"IBM Plex Mono, monospace\",\n            fontSize: \"16px\",\n            justifySelf: \"flex-end\",\n            width: \"207px\",\n            height: \"fit-content\",\n          }}\n          onClick={onClick}\n        >\n          Connect Wallet\n        </button>\n      ) : (\n        <div\n          style={{\n            position: \"relative\",\n            width: \"314px\",\n            height: \"40px\",\n            justifySelf: \"flex-end\",\n          }}\n        >\n          {balance ? (\n            <div\n              style={{\n                position: \"absolute\",\n                zIndex: 0,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                padding: \"4px 37px 4px 20px\",\n                border: \"4px solid #E6F7FF\",\n                borderRadius: \"10px\",\n                height: \"auto\",\n              }}\n            >\n              <p\n                style={{\n                  fontSize: \"16px\",\n                  lineHeight: \"24px\",\n                  color: \"rgba(0, 0, 0, 0.85)\",\n                }}\n              >\n                {parseInt(balance)} ETH\n              </p>\n            </div>\n          ) : null}\n          <div\n            style={{\n              marginLeft: \"auto\",\n              zIndex: 1,\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              height: \"100%\",\n            }}\n          >\n            <img\n              src={avatar}\n              alt=\"user avatar\"\n              style={{ borderRadius: \"100%\" }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}