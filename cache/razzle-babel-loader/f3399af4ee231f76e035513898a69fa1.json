{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/buttons/RouteSwitch.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport \"../../styles/buttons/RouteSwitch.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nconst RouteSwitch = () => {\n  const location = useLocation();\n  const {\n    pathname\n  } = location;\n  const {\n    0: chosenPath,\n    1: setChosenPath\n  } = useState(pathname);\n  useEffect(() => {\n    setChosenPath(pathname);\n    console.log(chosenPath);\n  }, [pathname]);\n  return __jsx(\"div\", {\n    id: \"switch-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    to: \"/\",\n    className: `switch-button ${chosenPath === \"/\" ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Swap\"), __jsx(Link, {\n    to: \"/claim\",\n    className: `switch-button ${chosenPath === \"/claim\" ? \"active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Claim\"), __jsx(motion.div, {\n    id: \"button-bg\",\n    initial: {\n      x: pathname === \"/\" ? 0 : \"100%\"\n    },\n    animate: {\n      x: pathname === \"/\" ? 0 : \"100%\"\n    },\n    transition: {\n      bounce: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RouteSwitch;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/buttons/RouteSwitch.tsx"],"names":["React","useEffect","useState","Link","useLocation","motion","RouteSwitch","location","pathname","chosenPath","setChosenPath","console","log","x","bounce"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeD,QAArB;AAEA,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAACM,QAAD,CAA5C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,aAAa,CAACF,QAAD,CAAb;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACD,GAJQ,EAIN,CAACD,QAAD,CAJM,CAAT;AAMA,SACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,SAAS,EAAG,iBAAgBC,UAAU,KAAK,GAAf,GAAqB,QAArB,GAAgC,EAAG,EAFjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOE,MAAC,IAAD;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,SAAS,EAAG,iBAAgBA,UAAU,KAAK,QAAf,GAA0B,QAA1B,GAAqC,EAAG,EAFtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,EAaE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,OAAO,EAAE;AAAEI,MAAAA,CAAC,EAAEL,QAAQ,KAAK,GAAb,GAAmB,CAAnB,GAAuB;AAA5B,KAFX;AAGE,IAAA,OAAO,EAAE;AAAEK,MAAAA,CAAC,EAAEL,QAAQ,KAAK,GAAb,GAAmB,CAAnB,GAAuB;AAA5B,KAHX;AAIE,IAAA,UAAU,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAsBD,CAlCD;;AAoCA,eAAeR,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../../styles/buttons/RouteSwitch.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nconst RouteSwitch = () => {\n  const location = useLocation();\n  const { pathname } = location;\n\n  const [chosenPath, setChosenPath] = useState(pathname);\n\n  useEffect(() => {\n    setChosenPath(pathname);\n\n    console.log(chosenPath);\n  }, [pathname]);\n\n  return (\n    <div id=\"switch-container\">\n      <Link\n        to=\"/\"\n        className={`switch-button ${chosenPath === \"/\" ? \"active\" : \"\"}`}\n      >\n        Swap\n      </Link>\n      <Link\n        to=\"/claim\"\n        className={`switch-button ${chosenPath === \"/claim\" ? \"active\" : \"\"}`}\n      >\n        Claim\n      </Link>\n      <motion.div\n        id=\"button-bg\"\n        initial={{ x: pathname === \"/\" ? 0 : \"100%\" }}\n        animate={{ x: pathname === \"/\" ? 0 : \"100%\" }}\n        transition={{ bounce: 0 }}\n      />\n    </div>\n  );\n};\n\nexport default RouteSwitch;\n"]},"metadata":{},"sourceType":"module"}