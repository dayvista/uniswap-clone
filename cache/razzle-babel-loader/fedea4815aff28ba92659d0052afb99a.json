{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/buttons/ConnectWallet.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n// uses Kovan testnet (chainId 42)\nconst injectedConnector = new InjectedConnector({\n  supportedChainIds: [42]\n});\n\nconst ConnectWallet = () => {\n  const {\n    chainId,\n    account,\n    activate,\n    active\n  } = useWeb3React();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  return __jsx(React.Fragment, null, !active ? __jsx(\"button\", {\n    style: {\n      fontWeight: 500,\n      background: \"#e6f7ff\",\n      padding: \"10px 36px\",\n      cursor: \"pointer\",\n      border: \"none\",\n      borderRadius: \"10px\",\n      fontFamily: \"IBM Plex Mono, monospace\",\n      fontSize: \"16px\",\n      justifySelf: \"flex-end\",\n      width: \"207px\",\n      height: \"fit-content\"\n    },\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Connect Wallet\") : __jsx(React.Fragment, null), __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, chainId), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, account), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, active ? \"active\" : \"inactive\")));\n};\n\nexport default ConnectWallet;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/buttons/ConnectWallet.tsx"],"names":["React","useWeb3React","InjectedConnector","injectedConnector","supportedChainIds","ConnectWallet","chainId","account","activate","active","onClick","fontWeight","background","padding","cursor","border","borderRadius","fontFamily","fontSize","justifySelf","width","height","position","top","left"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAGA;AACA,MAAMC,iBAAiB,GAAG,IAAID,iBAAJ,CAAsB;AAAEE,EAAAA,iBAAiB,EAAE,CAAC,EAAD;AAArB,CAAtB,CAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA;AAA9B,MAAyCR,YAAY,EAA3D;;AAEA,QAAMS,OAAO,GAAG,MAAM;AACpBF,IAAAA,QAAQ,CAACL,iBAAD,CAAR;AACD,GAFD;;AAIA,SACE,4BACG,CAACM,MAAD,GACC;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,UAAU,EAAE,SAFP;AAGLC,MAAAA,OAAO,EAAE,WAHJ;AAILC,MAAAA,MAAM,EAAE,SAJH;AAKLC,MAAAA,MAAM,EAAE,MALH;AAMLC,MAAAA,YAAY,EAAE,MANT;AAOLC,MAAAA,UAAU,EAAE,0BAPP;AAQLC,MAAAA,QAAQ,EAAE,MARL;AASLC,MAAAA,WAAW,EAAE,UATR;AAULC,MAAAA,KAAK,EAAE,OAVF;AAWLC,MAAAA,MAAM,EAAE;AAXH,KADT;AAcE,IAAA,OAAO,EAAEX,OAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAoBC,2BArBJ,EAuBE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,KAA7B;AAAoCC,MAAAA,IAAI,EAAE;AAA1C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,OAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,OAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,MAAM,GAAG,QAAH,GAAc,UAAxB,CAHF,CAvBF,CADF;AA+BD,CAtCD;;AAwCA,eAAeJ,aAAf","sourcesContent":["import React from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Formatter } from \"@ethersproject/providers\";\n\n// uses Kovan testnet (chainId 42)\nconst injectedConnector = new InjectedConnector({ supportedChainIds: [42] });\n\nconst ConnectWallet = () => {\n  const { chainId, account, activate, active } = useWeb3React<Web3Provider>();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  return (\n    <>\n      {!active ? (\n        <button\n          style={{\n            fontWeight: 500,\n            background: \"#e6f7ff\",\n            padding: \"10px 36px\",\n            cursor: \"pointer\",\n            border: \"none\",\n            borderRadius: \"10px\",\n            fontFamily: \"IBM Plex Mono, monospace\",\n            fontSize: \"16px\",\n            justifySelf: \"flex-end\",\n            width: \"207px\",\n            height: \"fit-content\",\n          }}\n          onClick={onClick}\n        >\n          Connect Wallet\n        </button>\n      ) : (\n        <></>\n      )}\n      <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}>\n        <p>{chainId}</p>\n        <p>{account}</p>\n        <p>{active ? \"active\" : \"inactive\"}</p>\n      </div>\n    </>\n  );\n};\n\nexport default ConnectWallet;\n"]},"metadata":{},"sourceType":"module"}