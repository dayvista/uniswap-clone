{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/fields/SwapFields.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { removeDuplicateObjectFromArray, getErc20Balance } from \"../../lib/utils\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport DownArrowIcon from \"../buttons/SwapTokens\";\nimport { useAppSelector as useSelector, useAppDispatch as useDispatch } from \"../../lib/redux/hooks\";\nimport { modifyFromValue, modifyToValue } from \"../../lib/redux/slices/inputValues\";\nimport { modifyFromToken, modifyToToken } from \"../../lib/redux/slices/swapTokens\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nconst Field = ({\n  heading,\n  balance,\n  token,\n  changeToken,\n  inputValue,\n  changeInputValue\n}) => {\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    if (heading.toLowerCase() === \"from\") {\n      if ((token === null || token === void 0 ? void 0 : token.address) && account) {\n        (async () => {\n          // TODO: need to figure out why this is returning an error\n          const tokenBalance = await getErc20Balance(token.address, account);\n          console.log(tokenBalance);\n        })();\n      }\n    }\n  }, [token, account]);\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0,\n      background: \"#e6f7ff\",\n      border: \"3px solid #91d5ff\",\n      borderRadius: \"10px\",\n      padding: \"5px 32px 6px 19px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      lineHeight: \"24px\",\n      fontWeight: 500,\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, heading), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      padding: \"6px 0px 9px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\",\n      background: \"#E6F7FF\",\n      boxShadow: \"0px 6px 8px rgba(0, 0, 0, 0.15)\",\n      borderRadius: \"10px\",\n      border: \"none\",\n      cursor: \"pointer\",\n      minHeight: \"40px\",\n      minWidth: \"114px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, token ? __jsx(\"img\", {\n    style: {\n      width: \"19px\",\n      height: \"19px\",\n      userSelect: \"none\"\n    },\n    src: token.logoURI,\n    alt: `${token.symbol} logo`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }) : null, __jsx(\"p\", {\n    style: {\n      fontSize: \"16px\",\n      fontWeight: 500,\n      lineHeight: \"23px\",\n      textAlign: \"center\",\n      margin: \"0px 8px\",\n      fontFamily: \"IBM Plex Mono, monospace\",\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, token ? token.symbol : \"Select Token\"), __jsx(HiChevronDown, {\n    style: {\n      fontSize: \"15px\",\n      color: \"rgba(0, 0, 0, 0.85)\",\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), __jsx(\"input\", {\n    style: {\n      color: \"rgb(0, 0, 0)\",\n      width: \"0px\",\n      position: \"relative\",\n      fontWeight: 500,\n      outline: \"none\",\n      border: \"none\",\n      flex: \"1 1 auto\",\n      backgroundColor: \"transparent\",\n      fontSize: \"24px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      padding: \"0px\",\n      appearance: \"textfield\",\n      textAlign: \"right\",\n      marginLeft: \"12px\",\n      fontFamily: \"IBM Plex Mono, monospace\"\n    },\n    type: \"number\",\n    inputMode: \"decimal\",\n    placeholder: \"0.0\",\n    spellCheck: false,\n    minLength: 1,\n    maxLength: 79,\n    value: inputValue ? inputValue : \"\",\n    onChange: e => {\n      const {\n        target\n      } = e;\n      const {\n        value\n      } = target;\n      dispatch(changeInputValue(value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"rgb(0, 0, 0)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, balance ? __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      lineHeight: \"24px\",\n      textAlign: \"left\",\n      color: \"rgba(0, 0, 0, 0.85)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    style: {\n      userSelect: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Balance:\"), balance.quantity, \" \", balance.symbol) : __jsx(\"div\", {\n    style: {\n      height: \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst SwapFields = () => {\n  const {\n    0: tokenList,\n    1: setTokenList\n  } = useState([]);\n  useEffect(() => {\n    const tokenSymbols = [\"WETH\", \"AAVE\", \"UNI\", \"COMP\", \"DAI\", \"USDC\"];\n\n    (async () => {\n      // TODO: fetch tokens with kovan testnet addresses (or just hard code it?)\n      const res = await fetch(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\n      const json = await res.json();\n      const {\n        tokens\n      } = json;\n      const filteredTokenList = removeDuplicateObjectFromArray(tokens.filter(token => tokenSymbols.includes(token.symbol)), \"symbol\");\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n  const fromToken = useSelector(state => state.swapTokens.fromToken);\n  const toToken = useSelector(state => state.swapTokens.toToken);\n  const fromValue = useSelector(state => state.inputValues.fromVal);\n  const toValue = useSelector(state => state.inputValues.toVal);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // if (fromToken == null && tokenList.length > 0) {\n    //   dispatch(modifyFromToken(tokenList[0]));\n    // }\n    if (tokenList.length > 0) {\n      if (fromToken == null) {\n        dispatch(modifyFromToken(tokenList[0]));\n      }\n\n      if (toToken == null) {\n        dispatch(modifyToToken(tokenList[1]));\n      }\n    }\n  }, [tokenList]);\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, __jsx(Field, {\n    heading: \"FROM\",\n    token: fromToken,\n    changeToken: modifyFromToken,\n    inputValue: fromValue,\n    changeInputValue: modifyFromValue,\n    balance: {\n      quantity: 32,\n      symbol: \"ETH\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }), __jsx(Field, {\n    heading: \"TO\",\n    token: toToken,\n    changeToken: modifyToToken,\n    inputValue: toValue,\n    changeInputValue: modifyToValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }), __jsx(DownArrowIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SwapFields;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/fields/SwapFields.tsx"],"names":["React","useState","useEffect","removeDuplicateObjectFromArray","getErc20Balance","HiChevronDown","DownArrowIcon","useAppSelector","useSelector","useAppDispatch","useDispatch","modifyFromValue","modifyToValue","modifyFromToken","modifyToToken","useWeb3React","Field","heading","balance","token","changeToken","inputValue","changeInputValue","dispatch","account","toLowerCase","address","tokenBalance","console","log","display","flexDirection","marginBottom","background","border","borderRadius","padding","fontSize","lineHeight","fontWeight","userSelect","justifyContent","alignItems","boxShadow","cursor","minHeight","minWidth","width","height","logoURI","symbol","textAlign","margin","fontFamily","color","position","outline","flex","backgroundColor","whiteSpace","overflow","textOverflow","appearance","marginLeft","e","target","value","quantity","SwapFields","tokenList","setTokenList","tokenSymbols","res","fetch","json","tokens","filteredTokenList","filter","includes","fromToken","state","swapTokens","toToken","fromValue","inputValues","fromVal","toValue","toVal","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  removeDuplicateObjectFromArray,\n  getErc20Balance,\n} from \"../../lib/utils\";\nimport { Token } from \"../../lib/types\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport DownArrowIcon from \"../buttons/SwapTokens\";\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from \"../../lib/redux/hooks\";\nimport {\n  modifyFromValue,\n  modifyToValue,\n} from \"../../lib/redux/slices/inputValues\";\nimport {\n  modifyFromToken,\n  modifyToToken,\n} from \"../../lib/redux/slices/swapTokens\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\n\ntype FieldProps = {\n  heading: string;\n  token: Token;\n  changeToken: ActionCreatorWithPayload<any, string>;\n  inputValue: string;\n  changeInputValue: ActionCreatorWithPayload<any, string>;\n  balance?: { quantity: number; symbol: string };\n};\nconst Field = ({\n  heading,\n  balance,\n  token,\n  changeToken,\n  inputValue,\n  changeInputValue,\n}: FieldProps) => {\n  const dispatch = useDispatch();\n\n  const { account } = useWeb3React<Web3Provider>();\n\n  useEffect(() => {\n    if (heading.toLowerCase() === \"from\") {\n      if (token?.address && account) {\n        (async () => {\n          // TODO: need to figure out why this is returning an error\n          const tokenBalance = await getErc20Balance(token.address, account);\n\n          console.log(tokenBalance);\n        })();\n      }\n    }\n  }, [token, account]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0,\n        background: \"#e6f7ff\",\n        border: \"3px solid #91d5ff\",\n        borderRadius: \"10px\",\n        padding: \"5px 32px 6px 19px\",\n      }}\n    >\n      <p\n        style={{\n          fontSize: \"14px\",\n          lineHeight: \"24px\",\n          fontWeight: 500,\n          userSelect: \"none\",\n        }}\n      >\n        {heading}\n      </p>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: \"6px 0px 9px 0px\",\n        }}\n      >\n        <button\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\",\n            background: \"#E6F7FF\",\n            boxShadow: \"0px 6px 8px rgba(0, 0, 0, 0.15)\",\n            borderRadius: \"10px\",\n            border: \"none\",\n            cursor: \"pointer\",\n            minHeight: \"40px\",\n            minWidth: \"114px\",\n          }}\n        >\n          {token ? (\n            <img\n              style={{ width: \"19px\", height: \"19px\", userSelect: \"none\" }}\n              src={token.logoURI}\n              alt={`${token.symbol} logo`}\n            />\n          ) : null}\n          <p\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 500,\n              lineHeight: \"23px\",\n              textAlign: \"center\",\n              margin: \"0px 8px\",\n              fontFamily: \"IBM Plex Mono, monospace\",\n              userSelect: \"none\",\n            }}\n          >\n            {token ? token.symbol : \"Select Token\"}\n          </p>\n          <HiChevronDown\n            style={{\n              fontSize: \"15px\",\n              color: \"rgba(0, 0, 0, 0.85)\",\n              userSelect: \"none\",\n            }}\n          />\n        </button>\n        <input\n          style={{\n            color: \"rgb(0, 0, 0)\",\n            width: \"0px\",\n            position: \"relative\",\n            fontWeight: 500,\n            outline: \"none\",\n            border: \"none\",\n            flex: \"1 1 auto\",\n            backgroundColor: \"transparent\",\n            fontSize: \"24px\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            padding: \"0px\",\n            appearance: \"textfield\",\n            textAlign: \"right\",\n            marginLeft: \"12px\",\n            fontFamily: \"IBM Plex Mono, monospace\",\n          }}\n          type=\"number\"\n          inputMode=\"decimal\"\n          placeholder=\"0.0\"\n          spellCheck={false}\n          minLength={1}\n          maxLength={79}\n          value={inputValue ? inputValue : \"\"}\n          onChange={(e) => {\n            const { target } = e;\n            const { value } = target;\n\n            dispatch(changeInputValue(value));\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          color: \"rgb(0, 0, 0)\",\n        }}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}\n        >\n          {balance ? (\n            <p\n              style={{\n                fontSize: \"14px\",\n                lineHeight: \"24px\",\n                textAlign: \"left\",\n                color: \"rgba(0, 0, 0, 0.85)\",\n              }}\n            >\n              <span style={{ userSelect: \"none\" }}>Balance:</span>\n              {balance.quantity} {balance.symbol}\n            </p>\n          ) : (\n            <div style={{ height: \"24px\" }} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SwapFields = () => {\n  const [tokenList, setTokenList] = useState<Token[]>([]);\n\n  useEffect(() => {\n    const tokenSymbols = [\"WETH\", \"AAVE\", \"UNI\", \"COMP\", \"DAI\", \"USDC\"];\n\n    (async () => {\n      // TODO: fetch tokens with kovan testnet addresses (or just hard code it?)\n      const res = await fetch(\n        \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\"\n      );\n      const json: { tokens: Token[] } = await res.json();\n      const { tokens } = json;\n\n      const filteredTokenList = removeDuplicateObjectFromArray(\n        tokens.filter((token) => tokenSymbols.includes(token.symbol)),\n        \"symbol\"\n      );\n\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n\n  const fromToken = useSelector((state) => state.swapTokens.fromToken);\n  const toToken = useSelector((state) => state.swapTokens.toToken);\n  const fromValue = useSelector((state) => state.inputValues.fromVal);\n  const toValue = useSelector((state) => state.inputValues.toVal);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // if (fromToken == null && tokenList.length > 0) {\n    //   dispatch(modifyFromToken(tokenList[0]));\n    // }\n\n    if (tokenList.length > 0) {\n      if (fromToken == null) {\n        dispatch(modifyFromToken(tokenList[0]));\n      }\n\n      if (toToken == null) {\n        dispatch(modifyToToken(tokenList[1]));\n      }\n    }\n  }, [tokenList]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      }}\n    >\n      <Field\n        heading=\"FROM\"\n        token={fromToken}\n        changeToken={modifyFromToken}\n        inputValue={fromValue}\n        changeInputValue={modifyFromValue}\n        balance={{ quantity: 32, symbol: \"ETH\" }}\n      />\n      <Field\n        heading=\"TO\"\n        token={toToken}\n        changeToken={modifyToToken}\n        inputValue={toValue}\n        changeInputValue={modifyToValue}\n      />\n      <DownArrowIcon />\n    </div>\n  );\n};\n\nexport default SwapFields;\n"]},"metadata":{},"sourceType":"module"}