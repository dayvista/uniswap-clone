{"ast":null,"code":"var _jsxFileName = \"/home/liam/Documents/Code/paladin/test/src/components/fields/SwapFields.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { removeDuplicateObjectFromArray, getErc20Balance, getExchangeRate } from \"../../lib/utils\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport TokenSwitch from \"../buttons/TokenSwitch\";\nimport { useAppSelector as useSelector, useAppDispatch as useDispatch } from \"../../lib/redux/hooks\";\nimport { modifyFromValue, modifyToValue } from \"../../lib/redux/slices/inputValues\";\nimport { modifyFromToken, modifyToToken } from \"../../lib/redux/slices/swapTokens\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport debounce from \"lodash.debounce\";\nimport \"../../styles/fields/SwapFields.css\";\n\nconst Field = ({\n  heading,\n  balance,\n  token,\n  changeToken,\n  inputValue,\n  changeInputValue\n}) => {\n  const fromToken = useSelector(state => state.swapTokens.fromToken);\n  const toToken = useSelector(state => state.swapTokens.toToken);\n  const dispatch = useDispatch();\n  const {\n    account,\n    active\n  } = useWeb3React(); // Get the token balance\n\n  useEffect(() => {\n    if (token && token.address && !token.balance && account) {\n      (async () => {\n        const tokenBalance = await getErc20Balance(token.address, account);\n        dispatch(changeToken(_objectSpread(_objectSpread({}, token), {}, {\n          balance: formatEther(tokenBalance)\n        })));\n      })();\n    }\n  }, [token, account]); // Make all token balances 'null' when the user is no longer logged into Metamask\n\n  useEffect(() => {\n    if (!active && token && token.balance) {\n      dispatch(changeToken(_objectSpread(_objectSpread({}, token), {}, {\n        balance: null\n      })));\n    }\n  }, [active]); // on input change, get the exchange rate between selected tokens\n\n  const debounceOnChange = debounce(event => {\n    const {\n      target\n    } = event;\n    const {\n      value\n    } = target;\n    dispatch(changeInputValue(value));\n  }, 1000);\n  useEffect(() => {\n    const shouldCalcExchangeRate = heading.toLowerCase() === \"from\" && inputValue && active && fromToken && fromToken.address && toToken && toToken.address ? true : false;\n\n    if (shouldCalcExchangeRate) {\n      (async () => {\n        const exchangeRate = await getExchangeRate(parseEther(inputValue), fromToken.address, toToken.address);\n        console.log(exchangeRate);\n      })();\n    }\n  }, [inputValue]);\n  return __jsx(\"div\", {\n    className: \"field-container\",\n    style: {\n      marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"14px\"\n    },\n    className: \"text bold no-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, heading), __jsx(\"div\", {\n    className: \"token-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    style: {\n      padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\"\n    },\n    className: \"token-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, token ? __jsx(\"img\", {\n    className: \"no-select\",\n    src: token.logoURI,\n    alt: `${token.symbol} logo`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }) : null, __jsx(\"p\", {\n    className: \"no-select bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, token ? token.symbol : \"Select Token\"), __jsx(HiChevronDown, {\n    className: \"no-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), __jsx(\"input\", {\n    type: \"number\",\n    inputMode: \"decimal\",\n    placeholder: \"0.0\",\n    spellCheck: false,\n    minLength: 1,\n    maxLength: 79,\n    onChange: debounceOnChange,\n    disabled: heading.toLowerCase() === \"to\",\n    id: `${heading.toLowerCase()}-token-input`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"balance-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, balance ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"no-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Balance:\"), balance.quantity === \"0.0\" || balance.quantity == \"0\" ? \"0\" : parseFloat(balance.quantity).toFixed(3), \" \", balance.symbol) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst SwapFields = () => {\n  const {\n    0: tokenList,\n    1: setTokenList\n  } = useState([]); // Async load the (mock) token list\n\n  useEffect(() => {\n    const desiredTokens = [{\n      symbol: \"WETH\",\n      address: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\"\n    }, {\n      symbol: \"AAVE\",\n      address: \"0xB597cd8D3217ea6477232F9217fa70837ff667Af\"\n    }, {\n      symbol: \"UNI\",\n      address: \"0x075A36BA8846C6B6F53644fDd3bf17E5151789DC\"\n    }, {\n      symbol: \"COMP\",\n      address: \"0x61460874a7196d6a22D1eE4922473664b3E95270\"\n    }, {\n      symbol: \"DAI\",\n      address: \"0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD\"\n    }, {\n      symbol: \"USDC\",\n      address: \"0xe22da380ee6B445bb8273C81944ADEB6E8450422\"\n    }];\n\n    (async () => {\n      const res = await fetch(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\n      const json = JSON.parse(await res.json());\n      const {\n        tokens\n      } = json;\n      const filteredTokenList = removeDuplicateObjectFromArray(tokens.filter(token => desiredTokens.some(desiredToken => desiredToken.symbol === token.symbol)), \"symbol\").map(token => {\n        return _objectSpread(_objectSpread({}, token), {}, {\n          address: desiredTokens.find(desiredToken => desiredToken.symbol === token.symbol).address\n        });\n      });\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n  const fromToken = useSelector(state => state.swapTokens.fromToken);\n  const toToken = useSelector(state => state.swapTokens.toToken);\n  const fromValue = useSelector(state => state.inputValues.fromVal);\n  const toValue = useSelector(state => state.inputValues.toVal);\n  const dispatch = useDispatch(); // Set the initial token values on page load\n\n  useEffect(() => {\n    // lines 259 - 261 = the desired function if the user was able to choose a token from a modal menu\n    // if (fromToken == null && tokenList.length > 0) {\n    //   dispatch(modifyFromToken(tokenList[0]));\n    // }\n    if (tokenList.length > 0) {\n      if (fromToken == null) {\n        dispatch(modifyFromToken(tokenList[0]));\n      }\n\n      if (toToken == null) {\n        dispatch(modifyToToken(tokenList[1]));\n      }\n    }\n  }, [tokenList]);\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\"\n    },\n    id: \"fields-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, __jsx(Field, {\n    heading: \"FROM\",\n    token: fromToken,\n    changeToken: modifyFromToken,\n    inputValue: fromValue,\n    changeInputValue: modifyFromValue,\n    balance: fromToken && (fromToken === null || fromToken === void 0 ? void 0 : fromToken.balance) ? {\n      quantity: fromToken.balance,\n      symbol: fromToken.symbol\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }), __jsx(Field, {\n    heading: \"TO\",\n    token: toToken,\n    changeToken: modifyToToken,\n    inputValue: toValue,\n    changeInputValue: modifyToValue,\n    balance: toToken && (toToken === null || toToken === void 0 ? void 0 : toToken.balance) ? {\n      quantity: toToken.balance,\n      symbol: toToken.symbol\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }), __jsx(TokenSwitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SwapFields;","map":{"version":3,"sources":["/home/liam/Documents/Code/paladin/test/src/components/fields/SwapFields.tsx"],"names":["React","useState","useEffect","removeDuplicateObjectFromArray","getErc20Balance","getExchangeRate","HiChevronDown","TokenSwitch","useAppSelector","useSelector","useAppDispatch","useDispatch","modifyFromValue","modifyToValue","modifyFromToken","modifyToToken","useWeb3React","formatEther","parseEther","debounce","Field","heading","balance","token","changeToken","inputValue","changeInputValue","fromToken","state","swapTokens","toToken","dispatch","account","active","address","tokenBalance","debounceOnChange","event","target","value","shouldCalcExchangeRate","toLowerCase","exchangeRate","console","log","marginBottom","fontSize","padding","logoURI","symbol","quantity","parseFloat","toFixed","SwapFields","tokenList","setTokenList","desiredTokens","res","fetch","json","JSON","parse","tokens","filteredTokenList","filter","some","desiredToken","map","find","fromValue","inputValues","fromVal","toValue","toVal","length","display","flexDirection","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport {\n  removeDuplicateObjectFromArray,\n  getErc20Balance,\n  getExchangeRate,\n} from \"../../lib/utils\";\nimport { Token } from \"../../lib/types\";\nimport { HiChevronDown } from \"react-icons/hi\";\nimport TokenSwitch from \"../buttons/TokenSwitch\";\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from \"../../lib/redux/hooks\";\nimport {\n  modifyFromValue,\n  modifyToValue,\n} from \"../../lib/redux/slices/inputValues\";\nimport {\n  modifyFromToken,\n  modifyToToken,\n} from \"../../lib/redux/slices/swapTokens\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport debounce from \"lodash.debounce\";\n\nimport \"../../styles/fields/SwapFields.css\";\n\ntype FieldProps = {\n  heading: string;\n  token: Token;\n  changeToken: ActionCreatorWithPayload<any, string>;\n  inputValue: string;\n  changeInputValue: ActionCreatorWithPayload<any, string>;\n  balance: { quantity: string; symbol: string };\n};\nconst Field = ({\n  heading,\n  balance,\n  token,\n  changeToken,\n  inputValue,\n  changeInputValue,\n}: FieldProps) => {\n  const fromToken = useSelector((state) => state.swapTokens.fromToken);\n  const toToken = useSelector((state) => state.swapTokens.toToken);\n\n  const dispatch = useDispatch();\n\n  const { account, active } = useWeb3React<Web3Provider>();\n\n  // Get the token balance\n  useEffect(() => {\n    if (token && token.address && !token.balance && account) {\n      (async () => {\n        const tokenBalance = await getErc20Balance(token.address, account);\n\n        dispatch(changeToken({ ...token, balance: formatEther(tokenBalance) }));\n      })();\n    }\n  }, [token, account]);\n\n  // Make all token balances 'null' when the user is no longer logged into Metamask\n  useEffect(() => {\n    if (!active && token && token.balance) {\n      dispatch(changeToken({ ...token, balance: null }));\n    }\n  }, [active]);\n\n  // on input change, get the exchange rate between selected tokens\n  const debounceOnChange = debounce((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    const { value } = target;\n\n    dispatch(changeInputValue(value));\n  }, 1000);\n\n  useEffect(() => {\n    const shouldCalcExchangeRate =\n      heading.toLowerCase() === \"from\" &&\n      inputValue &&\n      active &&\n      fromToken &&\n      fromToken.address &&\n      toToken &&\n      toToken.address\n        ? true\n        : false;\n\n    if (shouldCalcExchangeRate) {\n      (async () => {\n        const exchangeRate = await getExchangeRate(\n          parseEther(inputValue),\n          fromToken.address,\n          toToken.address\n        );\n\n        console.log(exchangeRate);\n      })();\n    }\n  }, [inputValue]);\n\n  return (\n    <div\n      className=\"field-container\"\n      style={{ marginBottom: heading.toLowerCase() === \"from\" ? \"3px\" : 0 }}\n    >\n      <p\n        style={{\n          fontSize: \"14px\",\n        }}\n        className=\"text bold no-select\"\n      >\n        {heading}\n      </p>\n      <div className=\"token-button-container\">\n        <button\n          style={{ padding: token ? \"8px 16px\" : \"8px 16px 8px 5px\" }}\n          className=\"token-button\"\n        >\n          {token ? (\n            <img\n              className=\"no-select\"\n              src={token.logoURI}\n              alt={`${token.symbol} logo`}\n            />\n          ) : null}\n          <p className=\"no-select bold\">\n            {token ? token.symbol : \"Select Token\"}\n          </p>\n          <HiChevronDown className=\"no-select\" />\n        </button>\n        <input\n          type=\"number\"\n          inputMode=\"decimal\"\n          placeholder=\"0.0\"\n          spellCheck={false}\n          minLength={1}\n          maxLength={79}\n          onChange={debounceOnChange}\n          disabled={heading.toLowerCase() === \"to\"}\n          id={`${heading.toLowerCase()}-token-input`}\n        />\n      </div>\n      <div className=\"balance-container\">\n        {balance ? (\n          <p>\n            <span className=\"no-select\">Balance:</span>\n            {balance.quantity === \"0.0\" || balance.quantity == \"0\"\n              ? \"0\"\n              : parseFloat(balance.quantity).toFixed(3)}{\" \"}\n            {balance.symbol}\n          </p>\n        ) : (\n          <div />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst SwapFields = () => {\n  const [tokenList, setTokenList] = useState<Token[]>([]);\n\n  // Async load the (mock) token list\n  useEffect(() => {\n    const desiredTokens = [\n      { symbol: \"WETH\", address: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\" },\n      { symbol: \"AAVE\", address: \"0xB597cd8D3217ea6477232F9217fa70837ff667Af\" },\n      { symbol: \"UNI\", address: \"0x075A36BA8846C6B6F53644fDd3bf17E5151789DC\" },\n      { symbol: \"COMP\", address: \"0x61460874a7196d6a22D1eE4922473664b3E95270\" },\n      { symbol: \"DAI\", address: \"0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD\" },\n      { symbol: \"USDC\", address: \"0xe22da380ee6B445bb8273C81944ADEB6E8450422\" },\n    ];\n\n    (async () => {\n      const res = await fetch(\n        \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\"\n      );\n      const json: { tokens: Token[] } = JSON.parse(await res.json());\n      const { tokens } = json;\n\n      const filteredTokenList = removeDuplicateObjectFromArray<Token>(\n        tokens.filter((token) =>\n          desiredTokens.some(\n            (desiredToken) => desiredToken.symbol === token.symbol\n          )\n        ),\n        \"symbol\"\n      ).map((token) => {\n        return {\n          ...token,\n          address: desiredTokens.find(\n            (desiredToken) => desiredToken.symbol === token.symbol\n          ).address,\n        };\n      });\n\n      setTokenList(filteredTokenList);\n    })();\n  }, []);\n\n  const fromToken = useSelector((state) => state.swapTokens.fromToken);\n  const toToken = useSelector((state) => state.swapTokens.toToken);\n  const fromValue = useSelector((state) => state.inputValues.fromVal);\n  const toValue = useSelector((state) => state.inputValues.toVal);\n\n  const dispatch = useDispatch();\n\n  // Set the initial token values on page load\n  useEffect(() => {\n    // lines 259 - 261 = the desired function if the user was able to choose a token from a modal menu\n    // if (fromToken == null && tokenList.length > 0) {\n    //   dispatch(modifyFromToken(tokenList[0]));\n    // }\n\n    if (tokenList.length > 0) {\n      if (fromToken == null) {\n        dispatch(modifyFromToken(tokenList[0]));\n      }\n\n      if (toToken == null) {\n        dispatch(modifyToToken(tokenList[1]));\n      }\n    }\n  }, [tokenList]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      }}\n      id=\"fields-container\"\n    >\n      <Field\n        heading=\"FROM\"\n        token={fromToken}\n        changeToken={modifyFromToken}\n        inputValue={fromValue}\n        changeInputValue={modifyFromValue}\n        balance={\n          fromToken && fromToken?.balance\n            ? { quantity: fromToken.balance, symbol: fromToken.symbol }\n            : null\n        }\n      />\n      <Field\n        heading=\"TO\"\n        token={toToken}\n        changeToken={modifyToToken}\n        inputValue={toValue}\n        changeInputValue={modifyToValue}\n        balance={\n          toToken && toToken?.balance\n            ? { quantity: toToken.balance, symbol: toToken.symbol }\n            : null\n        }\n      />\n      <TokenSwitch />\n    </div>\n  );\n};\n\nexport default SwapFields;\n"]},"metadata":{},"sourceType":"module"}